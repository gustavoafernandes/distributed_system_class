# 
# O bloco de eventos é uma parte obrigatória de qualquer arquivo de configuração do nginx. 
# Neste caso, ele está vazio porque o caso de uso do gateway é simples. 
# 
events {}

#
# O bloco http encapsula a configuração HTTP principal, incluindo as definições upstream, 
# configuração do servidor e regras de roteamento. Cada bloco upstream define um grupo 
# lógico de serviços backend.

# upstream:
# - book_service: Rotas para o Book Service em execução no nome do host book-service na porta 5050.
# - cart_service: Rotas para o Cart Service em execução no nome de host cart-service na porta 5051.
# Os nomes usados ​​aqui devem corresponder aos nomes dos serviços no Docker Compose.

# server:
# - No bloco server, definimos um servidor virtual que escuta as solicitações recebidas. 
# Aqui, o Nginx escuta na porta 80.

# location:
# - Solicitações cujos caminhos começam com /books/ são encaminhadas para o serviço upstream 
# denominado book_service. A barra final em proxy_pass http://book_service/; garante que a 
# URL seja remapeada corretamente ao ser passada para o servidor de backend.
# - Semelhante a /books/, qualquer solicitação com um caminho que começa com /cart/ é 
# encaminhada por proxy para o serviço de Carrinho.
# - O local catch-all lida com quaisquer outras solicitações e retorna uma resposta de 
# texto simples. Isso pode servir como uma verificação básica de integridade ou um espaço 
# reservado para indicar que o gateway está operacional.
#

http {
    upstream book_service {
        server book-service:5050;
    }

    upstream cart_service {
        server cart-service:5051;
    }

    server {
        listen 80;

        # Encaminha solicitações que começam com /books/ para book_service.
        location /books {
            proxy_pass http://book_service;
        }

        # Encaminha solicitações que começam com /cart/ para cart_service.
        location /cart {
            proxy_pass http://cart_service;
        }

        # Opcionalmente, pode-se definir um local abrangente (catch-all) ou expor
        # endpoints de verificação de integridade, se desejado.
        location / {
            return 200 "API Gateway is running\n";
        }
    }
}
